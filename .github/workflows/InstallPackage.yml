name: Install Package

on: 
  workflow_call:
    inputs:
      packageName:
        type: string
        description: Package Name
        required: true
      sousername:
        type: string
        description: Scratch Org User Name
        required: true
      sopasword:
        type: string
        description: Scratch Org Password
        required: true
      sourl:
        type: string
        description: Scratch Org URL
        required: true  
    secrets:
      DEVHUB_clientid:
        required: true
      RSA_PRIVATE_KEY:
        required: true
      PACKAGES_KEY:
        required: true

jobs:
  InstallPackages:
    runs-on: ubuntu-latest
    container:
      image: jfgarcia268/vlocity_sfdx:latest
    steps:  
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Login DevHub
      run: |
        echo "${{ secrets.RSA_PRIVATE_KEY }}"   > server.key
        sfdx auth:jwt:grant --clientid ${{ secrets.DEVHUB_clientid }}  --jwtkeyfile server.key --username demo.org@communications-b2c.1677243042259 --instanceurl https://login.salesforce.com --setalias DEVHUB
    - name: Login Scratch Org 
      run: |
        sfdx force:org:list
        export HOME=/root
        echo sopasword: ${{ inputs.sopasword }}
        echo sousername: ${{ inputs.sousername }}
        echo sourl: ${{ inputs.sourl }}
        #sfdx vlocityestools:auth:login --alias SO_ALIAS -p ${{ inputs.sopasword }} -u ${{ inputs.sousername }} --url ${{ inputs.sourl }}
        ls -la
        sfdx auth:jwt:grant --clientid ${{ secrets.DEVHUB_clientid }}  --jwtkeyfile server.key --username ${{ inputs.sousername }} --instanceurl https://login.salesforce.com --setalias DEVHUB
    - name: Core - Install Salesforce Package
      run: |
        #Get latest PackageVersion from DevHub and create file "PID.txt" with it
        if [ -f rm PID.txt  ]; then
          rm -rf PID.txt  
        fi
        ./scripts/bash/Get_Latest_Version_Package.sh DEVHUB core
        PACKAGE_ID=$(cat PID.txt)
        echo "PACKAGE_ID:${PACKAGE_ID}"
        sfdx package:install --package ${PACKAGE_ID} --targetusername=SO_ALIAS --wait 1000 --publishwait 1000 --securitytype=AdminsOnly -k ${{ secrets.PACKAGES_KEY }}
    - name: App1 - Install Salesforce Package
      if: ${{ inputs.packageName == 'App1' }} 
      run: |
        #Get latest PackageVersion from DevHub and create file "PID.txt" with it
        if [ -f rm PID.txt  ]; then
          rm -rf PID.txt  
        fi
        ./scripts/bash/Get_Latest_Version_Package.sh DEVHUB App1
        PACKAGE_ID=$(cat PID.txt)
        echo "PACKAGE_ID:${PACKAGE_ID}"
        sfdx package:install --package ${PACKAGE_ID} --targetusername=SO_ALIAS --wait 1000 --publishwait 1000 --securitytype=AdminsOnly -k ${{ secrets.PACKAGES_KEY }}
    - name: App2 - Install Salesforce Package
      if: ${{ inputs.packageName == 'App2' }} 
      run: |
        #Get latest PackageVersion from DevHub and create file "PID.txt" with it
        if [ -f rm PID.txt  ]; then
          rm -rf PID.txt  
        fi
        ./scripts/bash/Get_Latest_Version_Package.sh DEVHUB App2
        PACKAGE_ID=$(cat PID.txt)
        echo "PACKAGE_ID:${PACKAGE_ID}"
        sfdx package:install --package ${PACKAGE_ID} --targetusername=SO_ALIAS --wait 1000 --publishwait 1000 --securitytype=AdminsOnly -k ${{ secrets.PACKAGES_KEY }}

