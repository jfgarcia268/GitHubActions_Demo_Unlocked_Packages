name: CI

on:
  push:
    branches: [core, App1, App2]  

jobs:
  GetBranchName:
    runs-on: ubuntu-latest
    steps:
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v6.4
    outputs: 
      branchName: ${{ steps.branch-name.outputs.current_branch }} 
  CreateVersion:
      needs: GetBranchName
      uses: ./.github/workflows/CreatePackageVersion.yml
      with:
        runApexTest: 'true'
        skipValidation: 'false'
        packageName: ${{ needs.GetBranchName.outputs.branchName }}
        waitTime: 1000
      secrets:
        DEVHUB_clientid: ${{ secrets.DEVHUB_clientid }}
        RSA_PRIVATE_KEY: ${{ secrets.RSA_PRIVATE_KEY }}
        PACKAGES_KEY: ${{ secrets.PACKAGES_KEY }}
  CreateSO:
    needs: CreateVersion
    runs-on: ubuntu-latest
    container:
      image: jfgarcia268/vlocity_sfdx:core
    steps:  
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Login DevHub
      run: |
          echo "${{ secrets.RSA_PRIVATE_KEY }}"   > server.key
          sfdx auth:jwt:grant --clientid ${{ secrets.DEVHUB_clientid }}  --jwtkeyfile server.key --username demo.org@communications-b2c.1677243042259 --instanceurl https://login.salesforce.com --setalias DEVHUB
    - name: Create SO
      id: create_so
      run: |
        sfdx force:org:create --definitionfile config/project-scratch-def.json -a ALIAS --durationdays 29 --targetdevhubusername DEVHUB
        sfdx force:user:password:generate --targetusername ALIAS --targetdevhubusername DEVHUB
        if [ -f org.info ]; then
          rm org.info  
        fi
        sfdx force:org:display --verbose --targetusername ALIAS  --verbose >> org.info
        JSON_RESULT=$(sfdx force:org:display --target-org DevPackages --verbose --json)
        SO_SFDX_URL=$( jq -r  '.result.sfdxAuthUrl' <<< "${JSON_RESULT}" ) 
        echo "SO_SFDX_URL=$(SO_SFDX_URL)\n" >> $GITHUB_OUTPUT
    - uses: actions/upload-artifact@v3
      with:
        name: Org-Credentials
        path: ./org.info  
    outputs: 
      sosfdxurl: ${{ steps.create_so.outputs.SO_SFDX_URL }} 
  InstallPackages:
    needs: CreateSO
    uses: ./.github/workflows/InstallPackage.yml
    with:
      scratchOrgSFDXUrl: ${{ needs.CreateSO.outputs.sosfdxurl }}
      packageName: ${{ needs.GetBranchName.outputs.branchName }}
    secrets:
      DEVHUB_clientid: ${{ secrets.DEVHUB_clientid }}
      RSA_PRIVATE_KEY: ${{ secrets.RSA_PRIVATE_KEY }}
      PACKAGES_KEY: ${{ secrets.PACKAGES_KEY }}
  CodeScan:
    needs: GetBranchName
    runs-on: ubuntu-latest
    container:
      image: jfgarcia268/vlocity_sfdx:latest
    steps:  
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Scan   
      run: |
        export HOME=/root
        sfdx scanner:run --outfile Result.csv --format csv --target "force-app-${{ needs.getBranchName.outputs.branchName }}"
        ls -la
    - uses: actions/upload-artifact@v3
      with:
        name: Scan-Result
        path: ./Result.csv