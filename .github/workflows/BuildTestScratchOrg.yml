name: Create Test Scratch Org

on:
  workflow_dispatch:

jobs:
  GetBranchName:
    runs-on: ubuntu-latest
    steps:
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v6.4
    outputs: 
      branchName: ${{ steps.branch-name.outputs.current_branch }} 
  CreateScratchOrg:
    needs: GetBranchName
    runs-on: ubuntu-latest
    container:
      image: jfgarcia268/vlocity_sfdx:core
    steps:  
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Login DevHub
      run: |
          echo "${{ secrets.RSA_PRIVATE_KEY }}"   > server.key
          sfdx auth:jwt:grant --clientid ${{ secrets.DEVHUB_clientid }}  --jwtkeyfile server.key --username demo.org@communications-b2c.1677243042259 --instanceurl https://login.salesforce.com --setalias DEVHUB
    - name: Create Scratch Org
      id: create_so
      run: |
        sfdx force:org:create --definitionfile config/project-scratch-def.json -a ALIAS --durationdays 29 --target-dev-hub DEVHUB
        sfdx force:user:password:generate --target-org ALIAS --target-dev-hub DEVHUB
        if [ -f org.info ]; then
          rm org.info  
        fi
        sfdx org:display --target-org ALIAS --verbose  >> org.info
        cat org.info
        sfdx org:display --target-org ALIAS --verbose --json >> credential.json
        SO_SFDX_URL=$( jq -r  '.result.sfdxAuthUrl' credential.json) 
        echo "SO_SFDX_URL:${SO_SFDX_URL}"
        echo "SO_SFDX_URL=${SO_SFDX_URL}\n" >> $GITHUB_OUTPUT
    - uses: actions/upload-artifact@v3
      with:
        name: Org-Credentials
        path: ./org.info  
    outputs: 
      sosfdxurl: ${{ steps.create_so.outputs.SO_SFDX_URL }} 
  InstallPackages:
    needs: CreateScratchOrg
    uses: ./.github/workflows/InstallPackage.yml
    with:
      scratchOrgSFDXUrl: ${{ needs.CreateScratchOrg.outputs.sosfdxurl }}
      packageName: ${{ needs.GetBranchName.outputs.branchName }}
    secrets:
      DEVHUB_clientid: ${{ secrets.DEVHUB_clientid }}
      RSA_PRIVATE_KEY: ${{ secrets.RSA_PRIVATE_KEY }}
      PACKAGES_KEY: ${{ secrets.PACKAGES_KEY }}