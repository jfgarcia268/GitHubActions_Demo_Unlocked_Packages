name: Create Package Version Base

on:
  workflow_call:
    secrets:
      RSA_PRIVATE_KEY:
        required: true
      DEVHUB_clientid:
        required: true
    inputs:
      runApexTest:
        description: 'Run Apex Code Coverage'  
        required: true
        default: 'true'
      skipValidation:
        description: 'Skip Package Validation'     
        required: true
        default: 'false' 
      packageName:
        description: Package Name
        required: true
        default: 'core'
      waitTime:
        description: 'Wait time to create Package'     
        required: true
        default: 1000    

jobs:
  createVersion:
    runs-on: ubuntu-latest
    container:
      image: jfgarcia268/vlocity_sfdx:latest
    steps:  
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Create Package Version 
      env:
        RUN_APEX_TESTS: ${{ github.event.inputs.runApexTest }}
        SKIP_VALIDATION: ${{ github.event.inputs.skipValidation }}  
        PACKAGE_NAME: ${{ github.event.inputs.packageName }}  
        WAIT: ${{ github.event.inputs.waitTime }}  
      run: |
        echo Hello World
        sfdx force
        echo "${{ secrets.RSA_PRIVATE_KEY }}" > server.key
        sfdx auth:jwt:grant --clientid ${{ secrets.DEVHUB_clientid }} --jwtkeyfile server.key --username demo.org@communications-b2c.1677243042259 --instanceurl https://login.salesforce.com --setalias DEVHUB
        COMMAND="sfdx force:package:version:create -p ${PACKAGE_NAME} -d "force-app-${PACKAGE_NAME}" -k ${{ secrets.PACKAGES_KEY }} --wait ${WAIT} -v DEVHUB"      
        if ${RUN_APEX_TESTS}; then
          echo "Adding Code Coverage" 
          COMMAND="${COMMAND} --codecoverage " 
        fi
        if ${SKIP_VALIDATION}; then
          echo "Adding Skip Validation" 
          COMMAND="${COMMAND} --skipvalidation " 
        fi
        # Run sfdx force:package:version:create 
        echo "COMMAND:${COMMAND}"
        ${COMMAND}
